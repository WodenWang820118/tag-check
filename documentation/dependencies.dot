digraph dependencies { node [shape="rect", style="filled", colorscheme=set312]; ranksep=0.4; compound=false; remincross=true; splines=true; splines=ortho; rankdir=LR; rankdir=TB; rankdir=BT; label=<<table BORDER="0"> <tr> <td colspan="5" align="center"><b>Legend</b></td> </tr> <tr> <td> <table BORDER="0"> <tr> <td bgcolor="#ffffb3" width="20"></td> <td>  Declarations</td> </tr> </table> </td> <td> <table BORDER="0"> <tr> <td bgcolor="#8dd3c7" width="20"></td> <td>  Module</td> </tr> </table> </td> <td> <table BORDER="0"> <tr> <td bgcolor="#80b1d3" width="20"></td> <td>  Bootstrap</td> </tr> </table> </td> <td> <table BORDER="0"> <tr> <td bgcolor="#fdb462" width="20"></td> <td>  Providers</td> </tr> </table> </td> <td> <table BORDER="0"> <tr> <td bgcolor="#fb8072" width="20"></td> <td>  Exports</td> </tr> </table> </td> </tr></table>>; ratio=compress; fontname="Times-12";  subgraph "cluster_EntryModule" { label=""; style="dotted"; node [shape="folder", fillcolor=1];  subgraph cluster_EntryModule_declarations { style="solid"; node [style="filled", shape="rect"];  }    subgraph cluster_EntryModule_imports { style="solid"; node [style="filled", fillcolor=1, shape="rect"];   "EntryComponent" [label="EntryComponent", shape="folder"];    "CommonModule" [label="CommonModule", shape="folder"];    "RouterModule.forChild(args)" [label="RouterModule.forChild(args)", shape="folder"];   }   "EntryComponent" -> "EntryModule" [lhead="cluster_EntryModule", ltail="cluster_EntryModule_imports"];    "CommonModule" -> "EntryModule" [lhead="cluster_EntryModule", ltail="cluster_EntryModule_imports"];    "RouterModule.forChild(args)" -> "EntryModule" [lhead="cluster_EntryModule", ltail="cluster_EntryModule_imports"];     subgraph cluster_EntryModule_exports { style="solid"; node [style="filled", fillcolor=4, shape="rect"];  "RouterModule " [label="RouterModule ", shape="rect"]  }  "EntryModule" -> "RouterModule " [style="dashed", ltail="cluster_EntryModule" lhead="cluster_EntryModule_exports"];    subgraph cluster_EntryModule_bootstrap { style="solid"; node [style="filled", fillcolor=5, shape="rect"];  }    subgraph cluster_EntryModule_providers { style="solid"; node [style="filled", fillcolor=6, shape="rect"];  }   }  subgraph "cluster_HelpCenterModule" { label=""; style="dotted"; node [shape="folder", fillcolor=1];  subgraph cluster_HelpCenterModule_declarations { style="solid"; node [style="filled", shape="rect"];  }    subgraph cluster_HelpCenterModule_imports { style="solid"; node [style="filled", fillcolor=1, shape="rect"];   "CommonModule" [label="CommonModule", shape="folder"];    "RouterModule.forChild(args)" [label="RouterModule.forChild(args)", shape="folder"];    "MarkdownModule.forRoot()" [label="MarkdownModule.forRoot()", shape="folder"];   }   "CommonModule" -> "HelpCenterModule" [lhead="cluster_HelpCenterModule", ltail="cluster_HelpCenterModule_imports"];    "RouterModule.forChild(args)" -> "HelpCenterModule" [lhead="cluster_HelpCenterModule", ltail="cluster_HelpCenterModule_imports"];    "MarkdownModule.forRoot()" -> "HelpCenterModule" [lhead="cluster_HelpCenterModule", ltail="cluster_HelpCenterModule_imports"];     subgraph cluster_HelpCenterModule_exports { style="solid"; node [style="filled", fillcolor=4, shape="rect"];  "RouterModule " [label="RouterModule ", shape="rect"]  }  "HelpCenterModule" -> "RouterModule " [style="dashed", ltail="cluster_HelpCenterModule" lhead="cluster_HelpCenterModule_exports"];    subgraph cluster_HelpCenterModule_bootstrap { style="solid"; node [style="filled", fillcolor=5, shape="rect"];  }    subgraph cluster_HelpCenterModule_providers { style="solid"; node [style="filled", fillcolor=6, shape="rect"];  }   }  subgraph "cluster_ProjectModule" { label=""; style="dotted"; node [shape="folder", fillcolor=1];  subgraph cluster_ProjectModule_declarations { style="solid"; node [style="filled", shape="rect"];  }    subgraph cluster_ProjectModule_imports { style="solid"; node [style="filled", fillcolor=1, shape="rect"];   "CommonModule" [label="CommonModule", shape="folder"];    "RouterModule.forChild(args)" [label="RouterModule.forChild(args)", shape="folder"];   }   "CommonModule" -> "ProjectModule" [lhead="cluster_ProjectModule", ltail="cluster_ProjectModule_imports"];    "RouterModule.forChild(args)" -> "ProjectModule" [lhead="cluster_ProjectModule", ltail="cluster_ProjectModule_imports"];     subgraph cluster_ProjectModule_exports { style="solid"; node [style="filled", fillcolor=4, shape="rect"];  "RouterModule " [label="RouterModule ", shape="rect"]  }  "ProjectModule" -> "RouterModule " [style="dashed", ltail="cluster_ProjectModule" lhead="cluster_ProjectModule_exports"];    subgraph cluster_ProjectModule_bootstrap { style="solid"; node [style="filled", fillcolor=5, shape="rect"];  }    subgraph cluster_ProjectModule_providers { style="solid"; node [style="filled", fillcolor=6, shape="rect"];  }   }  subgraph "cluster_TagBuildModule" { label=""; style="dotted"; node [shape="folder", fillcolor=1];  subgraph cluster_TagBuildModule_declarations { style="solid"; node [style="filled", shape="rect"];  }    subgraph cluster_TagBuildModule_imports { style="solid"; node [style="filled", fillcolor=1, shape="rect"];   "CommonModule" [label="CommonModule", shape="folder"];    "RouterModule.forChild(args)" [label="RouterModule.forChild(args)", shape="folder"];   }   "CommonModule" -> "TagBuildModule" [lhead="cluster_TagBuildModule", ltail="cluster_TagBuildModule_imports"];    "RouterModule.forChild(args)" -> "TagBuildModule" [lhead="cluster_TagBuildModule", ltail="cluster_TagBuildModule_imports"];     subgraph cluster_TagBuildModule_exports { style="solid"; node [style="filled", fillcolor=4, shape="rect"];  "RouterModule " [label="RouterModule ", shape="rect"]  }  "TagBuildModule" -> "RouterModule " [style="dashed", ltail="cluster_TagBuildModule" lhead="cluster_TagBuildModule_exports"];    subgraph cluster_TagBuildModule_bootstrap { style="solid"; node [style="filled", fillcolor=5, shape="rect"];  }    subgraph cluster_TagBuildModule_providers { style="solid"; node [style="filled", fillcolor=6, shape="rect"];  }   }  }