import { Repository } from 'typeorm';
import { TestDataLayerEntity } from '../../../shared/entity/test-data-layer.entity';
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { CreateTestDataLayerDto } from '../../../shared/dto/test-data-layer/create-test-data-layer.dto';
import { UpdateTestDataLayerDto } from '../../../shared/dto/test-data-layer/update-test-data-layer.dto';
// TODO: replace the service with the another repository service
@Injectable()
export class TestDataLayerService {
  constructor(
    @InjectRepository(TestDataLayerEntity)
    private readonly testDataLayerRepository: Repository<TestDataLayerEntity>
  ) {}

  // the id will be auto-generated by the database
  async create(data: CreateTestDataLayerDto): Promise<TestDataLayerEntity> {
    const testDataLayer = new TestDataLayerEntity();
    testDataLayer.dataLayer = data.dataLayer as unknown as string;
    testDataLayer.dataLayerSpec = data.dataLayerSpec as unknown as string;

    return this.testDataLayerRepository.save(testDataLayer);
  }

  async update(data: UpdateTestDataLayerDto) {
    const testDataLayer = new TestDataLayerEntity();
    testDataLayer.dataLayer = data.dataLayer as unknown as string;
    testDataLayer.dataLayerSpec = data.dataLayerSpec as unknown as string;

    return this.testDataLayerRepository.update({ id: 1 }, testDataLayer);
  }

  async get(eventId: string) {
    return this.testDataLayerRepository.findOne({
      where: {
        id: 1
      }
    });
  }
}
