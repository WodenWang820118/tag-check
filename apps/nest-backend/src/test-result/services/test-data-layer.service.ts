import { Repository } from 'typeorm';
import { TestDataLayer } from '../entity/test-data-layer.entity';
import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { CreateTestDataLayerDto } from '../dto/test-data-layer/create-test-data-layer.dto';
import { UpdateTestDataLayerDto } from '../dto/test-data-layer/update-test-data-layer.dto';

@Injectable()
export class TestDataLayerService {
  constructor(
    @InjectRepository(TestDataLayer)
    private readonly testDataLayerRepository: Repository<TestDataLayer>
  ) {}

  // the id will be auto-generated by the database
  async create(data: Partial<CreateTestDataLayerDto>): Promise<TestDataLayer> {
    const testDataLayer = new TestDataLayer();
    testDataLayer.dataLayer = data.dataLayer as unknown as string;
    testDataLayer.dataLayerSpec = data.dataLayerSpec as unknown as string;

    return this.testDataLayerRepository.save(testDataLayer);
  }

  async update(data: UpdateTestDataLayerDto) {
    const testDataLayer = new TestDataLayer();
    testDataLayer.dataLayer = data.dataLayer as unknown as string;
    testDataLayer.dataLayerSpec = data.dataLayerSpec as unknown as string;

    return this.testDataLayerRepository.update(
      { eventId: data.eventId },
      testDataLayer
    );
  }

  async get(eventId: string) {
    return this.testDataLayerRepository.findOne({
      where: { eventId }
    });
  }
}
